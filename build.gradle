buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
		classpath 'net.sf.proguard:proguard-gradle:6.2.2'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
    }
}


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = "net.runelite.client.RuneLite"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
	compile fileTree(dir: 'libs', include: '*.jar')
	compile('org.projectlombok:lombok:1.16.22')
	compile('org.slf4j:slf4j-api:1.7.25')
	compile('ch.qos.logback:logback-classic:1.2.3')
	compile('ch.qos.logback:logback-core:1.2.3')
	compile('net.sf.jopt-simple:jopt-simple:5.0.1')
	compile('com.google.guava:guava:23.2-jre')
	compile('com.google.code.findbugs:jsr305:1.3.9')
	compile('com.google.errorprone:error_prone_annotations:2.0.18')
	compile('com.google.j2objc:j2objc-annotations:1.1')
	compile('org.codehaus.mojo:animal-sniffer-annotations:1.14')
	compile group: 'com.google.inject', name: 'guice', version: '4.0'
	compile group: 'com.apple', name: 'AppleJavaExtensions', version: '1.4'
	compile('javax.inject:javax.inject:1')
	compile('aopalliance:aopalliance:1.0')
	compile('com.google.code.gson:gson:2.8.5')
	compile('org.apache.commons:commons-text:1.2')
	compile('org.apache.commons:commons-lang3:3.7')
	compile('com.squareup.okhttp3:okhttp:3.7.0') {
		exclude group: 'okhttp3'
	}

	compile('com.squareup.okio:okio:1.12.0')
	compile('net.java.dev.jna:jna:4.5.1')

}
task wrapper(type: org.gradle.api.tasks.wrapper.Wrapper) {
	gradleVersion = '4.6'
}

task min(type:Exec) {
	commandLine 'java', '-jar', 'allatori/allatori.jar', 'allatori.xml'
}
jar {
	manifest {
		attributes 'Main-Class': mainClassName
	}
}

shadowJar {
	baseName = 'client-raw'
	classifier = null
	version = null
}

task obfusticate(type:Exec) {
	commandLine 'java', '-jar', 'allatori/allatori.jar', 'allatori/config.xml'
}

task complete {
	doLast {
		println("Client has been successfully built to build/libs/Shilo Client.jar")
	}
}

obfusticate.dependsOn shadowJar
obfusticate.mustRunAfter shadowJar

complete.dependsOn shadowJar
complete.dependsOn obfusticate
complete.mustRunAfter obfusticate